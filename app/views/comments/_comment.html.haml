.container.my-border
  %strong
    = link_to_user(comment.user)
  = comment.created_at.localtime.strftime("%Y-%m-%d %R")
  %br
  = comment.content
  %br
  %button{ id: 'add-reply', class: 'btn btn-outline-dark', 'data-comment-id': comment.id }
    = t('comments.comment_partial.add-reply')
  - if current_user && current_user.id == comment.user_id
    %button{ id: 'comment-edit', class: 'btn btn-outline-dark', 'data-comment-id': comment.id }
      = t('comments.comment_partial.edit')
    = link_to t('comments.comment_partial.delete'),
      news_comment_path(@news, comment),
      method: :delete,
      data: { confirm: t('comments.comment.confirmation') },
      class: 'btn btn-outline-dark'
  = form_for Comment.new, url: news_comments_path(@news, comment_id: comment.id) do |f|
    %br
    .div.not-displayed{ id: "reply_area_#{comment.id}" }
      %p
        = f.text_area :content, {placeholder: t('comments.comment_partial.reply_placeholder') }
      %p
        = f.submit t('comments.comment_partial.submit'), class: 'btn btn-outline-dark'
  - if current_user && current_user.id == comment.user_id
    = form_for [@news, comment] do |f|
      .div.not-displayed{ id: "edit_area_#{comment.id}" }
        %p
          = f.text_area :content, { cols: 30, rows: 2}
        %p
          = f.submit t('comments.comment_partial.edit'), class: 'btn btn-outline-dark'
  = render partial: 'comments/comment', collection: comment.comments.sort_by(&:created_at)
